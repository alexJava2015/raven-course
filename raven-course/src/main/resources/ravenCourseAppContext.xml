<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<context:component-scan base-package="com.raven.course" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- This profile will be activated when a H2 Server is running, mainly because 
	     it was started using the h2-startup.sh script  See RavenActivateProfileResolver
	     class to get more details about profile activation. This is the typical 
	     configuration that can be used with other databases. PosgreSQL, Oracle, etc.  -->
	<beans profile="h2-server">

		<context:property-placeholder location="classpath:/databases/h2/h2.properties" />

		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
			<property name="driverClassName" value="${h2.driver.class.name}" />
			<property name="jdbcUrl" value="${h2.url}" />
			<property name="username" value="${h2.username}" />
			<property name="password" value="${h2.password}" />
		</bean>

	</beans>

	<!-- This profile will be activated when there is no H2 Server running by using
	     the h2-startup.sh script. In this case the server will be started using 
	     the bean h2Server.  After the test execution the server will be stopped 
	     by using the value of the destroy-method attribute  -->
	<beans profile="h2-no-server">

		<bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer"
			init-method="start" destroy-method="stop">
			<constructor-arg
				value="-tcp,-tcpAllowOthers,-baseDir,src/test/resources/databases/h2/schemas" />
		</bean>

		<context:property-placeholder location="classpath:/databases/h2/h2.properties" />

		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
			<property name="driverClassName" value="${h2.driver.class.name}" />
			<property name="jdbcUrl" value="${h2.url}" />
			<property name="username" value="${h2.username}" />
			<property name="password" value="${h2.password}" />
		</bean>

	</beans>

<!-- This profile will be activated as the last option when no H2 server is running
     neither the database file exist.This profile uses an embedded h2 database which
     will be created using the scripts listed below. No database file are written,
     so every test the database is created.  -->
	<beans profile="h2-embedded">

		<jdbc:embedded-database id="dataSource" type="H2">
			<jdbc:script location="classpath:databases/h2/scripts/raven-course-ddl-h2.sql" />
			<jdbc:script location="classpath:databases/h2/scripts/raven-course-initial-data.sql" />
		</jdbc:embedded-database>
	</beans>

</beans>
